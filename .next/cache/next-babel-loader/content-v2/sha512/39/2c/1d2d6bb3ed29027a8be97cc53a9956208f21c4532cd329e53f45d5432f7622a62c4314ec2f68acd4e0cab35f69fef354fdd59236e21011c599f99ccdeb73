{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/lihib/Desktop/nextproject/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"C:/Users/lihib/Desktop/nextproject/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\lihib\\\\Desktop\\\\nextproject\\\\pages\\\\new-meetup\\\\index.js\",\n    _s = $RefreshSig$();\n\n// our-domain.com/new-meetup\nimport { useRouter } from 'next/router';\nimport NewMeetupForm from '../../components/meetups/NewMeetupForm';\n\nfunction NewMeetupPage() {\n  _s();\n\n  var router = useRouter();\n\n  function addMeetupHandler(_x) {\n    return _addMeetupHandler.apply(this, arguments);\n  }\n\n  function _addMeetupHandler() {\n    _addMeetupHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(enteredMeetupData) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('http://localhost:3000/api/new-meetup', {\n                method: 'POST',\n                body: JSON.stringify(enteredMeetupData),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              })[\"catch\"](function (err) {\n                alert(err.message);\n              });\n\n            case 2:\n              response = _context.sent;\n              // const resp =  await JSON.stringify(response);\n              // const data =  await JSON.parse(resp);\n              // .then((response) =>  response.json());\n              ///////////////////////////////////////////////////////////\n              // const res = await response.json();\n              // addMeetupHandler().then((res) => {\n              //   if (res.ok) {\n              //     return res.json();\n              //   } else {\n              //     return res.json().then((data) => {\n              //       let errorMessage = 'Authentication failed!';\n              //       if (data && data.error && data.error.message) {\n              //         errorMessage = data.error.message;\n              //       }\n              //       throw new Error(errorMessage);\n              //     });\n              //   }\n              // })\n              // .catch((err) => {\n              //   alert(err.message);\n              // });\n              // const data = await response.json();\n              console.log(response);\n              router.push('/');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _addMeetupHandler.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(NewMeetupForm, {\n    onAddMeetup: addMeetupHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n}\n\n_s(NewMeetupPage, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = NewMeetupPage;\nexport default NewMeetupPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewMeetupPage\");","map":{"version":3,"sources":["C:/Users/lihib/Desktop/nextproject/pages/new-meetup/index.js"],"names":["useRouter","NewMeetupForm","NewMeetupPage","router","addMeetupHandler","enteredMeetupData","fetch","method","body","JSON","stringify","headers","err","alert","message","response","console","log","push"],"mappings":";;;;;;;AAAA;AACA,SAASA,SAAT,QAA0B,aAA1B;AAEA,OAAOC,aAAP,MAA0B,wCAA1B;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AACvB,MAAMC,MAAM,GAAGH,SAAS,EAAxB;;AADuB,WAGRI,gBAHQ;AAAA;AAAA;;AAAA;AAAA,iFAGvB,iBAAgCC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACyBC,KAAK,CAAC,sCAAD,EAAyC;AACnEC,gBAAAA,MAAM,EAAE,MAD2D;AAEnEC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,iBAAf,CAF6D;AAGnEM,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT;AAH0D,eAAzC,CAAL,UAMd,UAACC,GAAD,EAAS;AACdC,gBAAAA,KAAK,CAACD,GAAG,CAACE,OAAL,CAAL;AACD,eARoB,CADzB;;AAAA;AACQC,cAAAA,QADR;AAWE;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI;AAEAC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEAZ,cAAAA,MAAM,CAACe,IAAP,CAAY,GAAZ;;AArCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHuB;AAAA;AAAA;;AA2CvB,sBAAO,QAAC,aAAD;AAAe,IAAA,WAAW,EAAEd;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA5CQF,a;UACQF,S;;;KADRE,a;AA8CT,eAAeA,aAAf","sourcesContent":["// our-domain.com/new-meetup\r\nimport { useRouter } from 'next/router';\r\n\r\nimport NewMeetupForm from '../../components/meetups/NewMeetupForm';\r\n\r\nfunction NewMeetupPage() {\r\n  const router = useRouter();\r\n\r\n  async function addMeetupHandler(enteredMeetupData) {\r\n    const response = await fetch('http://localhost:3000/api/new-meetup', {\r\n      method: 'POST',\r\n      body: JSON.stringify(enteredMeetupData),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      }\r\n    }).catch((err) => {\r\n        alert(err.message);\r\n      });\r\n  \r\n    // const resp =  await JSON.stringify(response);\r\n    // const data =  await JSON.parse(resp);\r\n    // .then((response) =>  response.json());\r\n///////////////////////////////////////////////////////////\r\n// const res = await response.json();\r\n// addMeetupHandler().then((res) => {\r\n//   if (res.ok) {\r\n//     return res.json();\r\n//   } else {\r\n//     return res.json().then((data) => {\r\n//       let errorMessage = 'Authentication failed!';\r\n//       if (data && data.error && data.error.message) {\r\n//         errorMessage = data.error.message;\r\n//       }\r\n//       throw new Error(errorMessage);\r\n//     });\r\n//   }\r\n// })\r\n// .catch((err) => {\r\n//   alert(err.message);\r\n// });\r\n\r\n    // const data = await response.json();\r\n\r\n    console.log(response);\r\n\r\n    router.push('/');\r\n  }\r\n\r\n  return <NewMeetupForm onAddMeetup={addMeetupHandler} />\r\n}\r\n\r\nexport default NewMeetupPage;"]},"metadata":{},"sourceType":"module"}