{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\lihib\\\\Desktop\\\\nextproject\\\\pages\\\\[recipeId]\\\\index.js\";\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport RecipeDetail from '../../components/recipes/RecipeDetail';\n\nfunction RecipeDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.recipeData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.recipeData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecipeDetail, {\n      image: props.recipeData.image,\n      title: props.recipeData.title,\n      address: props.recipeData.address,\n      description: props.recipeData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = RecipeDetails;\nexport var __N_SSG = true;\nexport default RecipeDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeDetails\");","map":{"version":3,"sources":["C:/Users/lihib/Desktop/nextproject/pages/[recipeId]/index.js"],"names":["Fragment","Head","RecipeDetail","RecipeDetails","props","recipeData","title","description","image","address"],"mappings":";;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KAD1B;AAEE,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,KAF1B;AAGE,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBI,OAH5B;AAIE,MAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBE;AAJhC;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;KAfQJ,a;;AAqET,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from 'mongodb';\r\nimport { Fragment } from 'react';\r\nimport Head from 'next/head';\r\nimport RecipeDetail from '../../components/recipes/RecipeDetail';\r\n\r\nfunction RecipeDetails(props) {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>{props.recipeData.title}</title>\r\n        <meta name='description' content={props.recipeData.description} />\r\n      </Head>\r\n      <RecipeDetail\r\n        image={props.recipeData.image}\r\n        title={props.recipeData.title}\r\n        address={props.recipeData.address}\r\n        description={props.recipeData.description}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://bel:123bel@cluster0.girhn.mongodb.net/myFirstDatabase?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n\r\n  const recipesCollection = db.collection('recipes');\r\n\r\n  //'_id:1' : only includes the id of the object, no other values. fetching 'id' only for every object\r\n  const recipes = await recipesCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n//fallback: blocking/true --> Next.js will not respond with 404 page if it cant find the page immidiatly.\r\n  return {\r\n    fallback: 'blocking',\r\n    paths: recipes.map((recipe) => ({\r\n      params: { recipeId: recipe._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data for a single recipe\r\n\r\n  const recipeId = context.params.recipeId;\r\n\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://bel:123bel@cluster0.girhn.mongodb.net/myFirstDatabase?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n\r\n  const recipesCollection = db.collection('recipes');\r\n\r\n  const selectedRecipe = await recipesCollection.findOne({\r\n    _id: ObjectId(recipeId),\r\n  });\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      recipeData: {\r\n        id: selectedRecipe._id.toString(),\r\n        title: selectedRecipe.title,\r\n        address: selectedRecipe.address,\r\n        image: selectedRecipe.image,\r\n        description: selectedRecipe.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default RecipeDetails;"]},"metadata":{},"sourceType":"module"}