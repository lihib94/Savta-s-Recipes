{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\lihib\\\\Desktop\\\\nextproject\\\\pages\\\\recipes\\\\index.js\";\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport RecipesList from '../components/recipes/RecipesList';\nimport classes from '../components/layout/index.module.css'; //the head is for search engines and for seeing these values on the html page\n\nfunction Recipes(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.mainLayout,\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Savta's Recipes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"description\",\n          content: \"Browse a huge list of highly active React Recipes!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RecipesList, {\n        recipes: props.recipes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Recipes;\nexport var __N_SSG = true;\nexport default Recipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipes\");","map":{"version":3,"sources":["C:/Users/lihib/Desktop/nextproject/pages/recipes/index.js"],"names":["Fragment","Head","RecipesList","classes","Recipes","props","mainLayout","recipes"],"mappings":";;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,OAAP,MAAoB,uCAApB,C,CAEA;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,sBACE,QAAC,QAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEF,OAAO,CAACG,UAAxB;AAAA,8BACE,QAAC,IAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,aADP;AAEE,UAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,WAAD;AAAa,QAAA,OAAO,EAAED,KAAK,CAACE;AAA5B;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;KAfQH,O;;AA6CT,eAAeA,OAAf","sourcesContent":["\r\nimport { Fragment } from 'react';\r\nimport Head from 'next/head';\r\nimport { MongoClient } from 'mongodb';\r\nimport RecipesList from '../components/recipes/RecipesList';\r\nimport classes from '../components/layout/index.module.css';\r\n\r\n//the head is for search engines and for seeing these values on the html page\r\nfunction Recipes(props) {\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.mainLayout}>\r\n        <Head>\r\n          <title>Savta's Recipes</title>\r\n          <meta\r\n            name='description'\r\n            content='Browse a huge list of highly active React Recipes!'\r\n          />\r\n        </Head>\r\n        <RecipesList recipes={props.recipes} />;\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport async function getStaticProps() {\r\n  // fetch data from an API\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://bel:123bel@cluster0.girhn.mongodb.net/myFirstDatabase?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n\r\n  const recipesCollection = db.collection('recipes');\r\n\r\n  const recipes = await recipesCollection.find().toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      recipes: recipes.map((recipe) => ({\r\n        title: recipe.title,\r\n        description: recipe.description,\r\n        image: recipe.image,\r\n        ingredients: recipe.ingredients,\r\n        directions: recipe.directions,\r\n        id: recipe._id.toString(),\r\n      })),\r\n    },\r\n    revalidate: 1,\r\n  };\r\n}\r\n\r\nexport default Recipes;"]},"metadata":{},"sourceType":"module"}